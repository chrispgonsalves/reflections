How did viewing a diff between two versions of a file help you see the bug that was introduced?

Well, it didn't. I haven't been able to get FC on the windows cmd line, or diff on the git bash cmd line to work. I do understand the concept, and fiddling around trying to remedy this problem has helped me to better understand the comparing of files and version control. I'm also feeling a bit more comfortable with the cmd line. The fact remains, however, that I cannot manually compare files effectively. Though this isn't something I necessarily want to do, I'd like to have the option, and I'd like to know what's causing the issue.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Obviously by helping me to discover mistakes by comparing changes made from version to version. The smaller the interval between versions, the fewer changes will need to be compared to discover bugs.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

While Google's methods, as always, cater to a large mass of people, and can help prevent mistakes for many people, the efficiency of choosing and creating your own save points throughout a project will go up as your experience and familiarity grows.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

I don't need most of my documents (rich text) to be linked or updated together, but for a coded program I do. 	


How can you use the commands git log and git diff to view the history of files?

Use git log to pull up a list of commits made (with their commit ID). Use git diff to compare two commits by referencing their commit ID.


How might using version control make you more confident to make changes that could break something?

If I do make a change that breaks something, version control helps assure me that I can identify what caused the break, and allows me to go to previous versions before the change.


Now that you have your workspace set up, what do you want to try using Git for?

I want to creat artificially intelligent teachers.

